MERN =>
    M => MongoDB (Database)
    E => Express (Backend)
    R => React (Frontend)
    N => Node.js (Backend)

Using Backend provides protection to hide sensitive data from DB.

JWT => JSON Web Token
When the client sends request for any endpoint, then it sends JWT token along with the request. Server can authenticate the user based on this token.
Initally client send full credentials of the user and then server sends this JWT token back to the client.

This is helpful in case of conditional rendering of components in frontend. We can also show/hide components based on whether user is logged in or not.

The JWT contains 3 parts =>
    1. Header => Contains the algorithm used for the JWT.
    2. Payload => Contain non-sensitive user data(e.g., a user id)
    3. Signature => Used to verify the token by the server.
If any of the above is changed then whole token is changed.
Server uses header and payload and hash them together using a secret string(only known to server) to create a signature string inside the server for mentioned user. The secret is only available inside the server and never ever sent back to the client. The JWT token is made out of these 3 parts and them sent back to client. This means, for a particular JWT token, if either of header or payload is changed to trick the server then server will deny such acts.