MERN =>
    M => MongoDB (Database)
    E => Express (Backend)
    R => React (Frontend)
    N => Node.js (Backend)

Using Backend provides protection to hide sensitive data from DB.

JWT => JSON Web Token
When the client sends request for any endpoint, then it sends JWT token along with the request. Server can authenticate the user based on this token.
Initally client send full credentials of the user and then server sends this JWT token back to the client.

This is helpful in case of conditional rendering of components in frontend. We can also show/hide components based on whether user is logged in or not.

The JWT contains 3 parts =>
    1. Header => Contains the algorithm used for the JWT.
    2. Payload => Contain non-sensitive user data(e.g., a user id)
    3. Signature => Used to verify the token by the server.
If any of the above is changed then whole token is changed.
Server uses header and payload and hash them together using a secret string(only known to server) to create a signature string inside the server for mentioned user. The secret is only available inside the server and never ever sent back to the client. The JWT token is made out of these 3 parts and them sent back to client. This means, for a particular JWT token, if either of header or payload is changed to trick the server then server will deny such acts.

React-Router =>
    In normal websites, whenever a user requests for a page then this request goes to server and then server responds with HTML page as per request.
    In case of React, it only render single page and some JSX bundles along with it. Whenever user requests for page then React will not send this request to server, instead React will handle this request in client side only. Depending on the request, React renders specific component within the page. 

Loader Functions in React router =>
    These functions help us to load the component beforehand instead of loading them when they render. Normally we use useEffect hook for such cases.

Route Parameters =>
    Changeable section of router
    Some components shown for every variation
    
What is React ? =>
    JavaScript library created by Facebook
    Also used ny Netflix and Instagram
    Used to create JS-driven dynamic web apps
    In that regard, can be compared to Angular and Vue.

What is Redux ? =>
    A layer on-top React
    Helps with state management of our apps
        data in the app 
        UI state of the app
    
DOM => Document Object Model
Whenever there are changes in Components then React compares the new component and old component and it updates the compoenents if there are changes.

Components and Templates =>
    Components look like HTML templates (Actually JSX)
    They contain states(data or UI)
    They also contain JavaScript for functionality.

Component State =>
    JavaScript Object
    Describes thye current state of teh component, data or UI
    The state of the compoennt can be updated over time.
        a model could close
        the data we output could change.

Create React App command =>
    A command line tool to create React apps
    Development Server
    Use ES6 features which are not normally supported
    Keep our code modular
    Use build tools to create optimized code.

Single Page Apps
    React apps are typically SPAs
    Only ever one HTML page served to the browser
    React then controls what a user sees on that page.

Container Components vs UI Components =>
    Container Components =>
        Contain state
        Contain lifecycle hooks
        Not concerned with UI
        Use Classes to create
    UI Components =>
        Dont contain state
        Receive data from props
        Only concerned with UI
        Use Functions to create

Container component can contain another container component inside it. (Nesting containers)
